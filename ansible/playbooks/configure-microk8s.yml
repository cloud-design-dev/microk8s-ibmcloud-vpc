---
- name: 'Deploy microk8s cluster'
  gather_facts: true
  hosts: controllers, workers
  vars:
    microk8s_version: 1.27
    microk8s_ip_regex: "([0-9]{1,3}[\\.]){3}[0-9]{1,3}"
    microk8s_addons:
      - dns
      - registry
      - ingress
     
  tasks:
    - name: Enumerate all controllers within the hosts file
      blockinfile:
        dest: /etc/hosts
        marker: "# {mark} ANSIBLE MANAGED: microk8s hosts"
        content: |
          {% for host in groups['controllers'] %}
          {{ hostvars[host].ansible_default_ipv4.address }} {{ hostvars[host].ansible_hostname }}
          {% endfor %}

    - name: Enumerate all workers within the hosts file
      blockinfile:
        dest: /etc/hosts
        marker: "# {mark} ANSIBLE MANAGED: microk8s hosts"
        content: |
          {% for host in groups['workers'] %}
          {{ hostvars[host].ansible_default_ipv4.address }} {{ hostvars[host].ansible_hostname }}
          {% endfor %}

    - name: Find the designated host
      set_fact:
        designated_host: "{{ (groups['controllers']|sort)[0] }}"

    - name: Wait for microk8s to be ready
      command: microk8s status --wait-ready
      changed_when: false
      delegate_to: "{{ designated_host }}"
      register: mk8sstatusout
      failed_when:
          - "'This MicroK8s deployment is acting as a node in a cluster.' not in mk8sstatusout.stdout_lines"
          - mk8sstatusout.rc > 0

    - name: Create kubectl alias
      ansible.builtin.command: "snap alias microk8s.kubectl kubectl"
      changed_when: false
      register: aliaskubectlout

    - name: Waiting for microk8s to be ready on microk8s host master
      ansible.builtin.command: "microk8s status --wait-ready"
      delegate_to: "{{ designated_host }}"
      delegate_facts: true
      changed_when: false

    - name: Get the microk8s join command from the microk8s master
      ansible.builtin.shell: "microk8s add-node | grep -E -m1 'microk8s join {{ microk8s_ip_regex }}'"
      delegate_to: "{{ designated_host }}"
      delegate_facts: true
      changed_when: false
      register: microk8s_join_command

    - name: Print return information from the previous task
      ansible.builtin.debug:
        var: microk8s_join_command

    - name: Get microk8s cluster nodes
      ansible.builtin.command: "microk8s kubectl get node"
      delegate_to: "{{ designated_host }}"
      delegate_facts: true
      changed_when: false
      register: microk8s_cluster_node

    - name: Waiting for microk8s to be ready on microk8s host node
      ansible.builtin.command: "microk8s status --wait-ready"
      changed_when: false

    - name: Set the microk8s join command on the microk8s control nodes
      ansible.builtin.command: "{{ microk8s_join_command.stdout }}"
      register: join_command_output
      failed_when:
        - "'already known to dqlite' not in join_command_output.stdout"
        - join_command_output.rc > 0
      when:
        - inventory_hostname in groups['controllers']
        - inventory_hostname != designated_host
        - inventory_hostname != groups['workers']

    - name: Set the microk8s join command on the microk8s worker nodes
      ansible.builtin.command: "{{ microk8s_join_command.stdout }} --worker"
      register: join_command_output
      failed_when:
        - "'already known to dqlite' not in join_command_output.stdout"
        - join_command_output.rc > 0
      when:
        - inventory_hostname in groups['workers']
        - inventory_hostname != groups['controllers']
        - inventory_hostname != designated_host

    - name: Label the kubernetes controller node for easier identification
      ansible.builtin.command: "microk8s kubectl label node {{ inventory_hostname }} kubernetes.io/role=contoller"
      changed_when: false
      delegate_to: "{{ designated_host }}"
      when:
        - inventory_hostname in groups['controllers']

    - name: Label the kubernetes worker nodes for easier identification
      ansible.builtin.command: "microk8s kubectl label node {{ inventory_hostname }} kubernetes.io/role=worker"
      delegate_to: "{{ designated_host }}"
      changed_when: false
      when:
        - inventory_hostname != groups['controllers']
        - inventory_hostname in groups['workers']

    - name: Enable microk8s add-ons
      ansible.builtin.shell: microk8s enable {{ item }}
      loop: "{{ microk8s_addons }}"
      delegate_to: "{{ designated_host }}"