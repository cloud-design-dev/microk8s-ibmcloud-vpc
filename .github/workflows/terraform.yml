name: 'Terraform Validate and Plan'

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  TF_VAR_ibmcloud_api_key: ${{ secrets.IBMCLOUD_API_KEY }}
  TF_VAR_region: ${{ vars.VPC_REGION }}
  TF_VAR_existing_resource_group: ${{ vars.RESOURCE_GROUP }}
  TF_VAR_existing_ssh_key: ${{ vars.SSH_KEY }}
  TF_VAR_owner: ${{ github.actor }}
  TF_VAR_existing_cos_instance: ${{ vars.COS_INSTANCE }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    # environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false
